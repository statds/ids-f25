## My Presentation Topic (Template)

This section was prepared by Jack Perkins.

Use Markdown syntax. If not clear on what to do, learn from the class
notes sources.

+ Pay attention to the sectioning levels.
+ Cite references with their bib key.
+ In examples, maximize usage of data set that the class is familiar with.
+ Could use datasets in Python packages or downloadable on the fly.
+ Test your section by `quarto render <filename.qmd>`.


### Introduction

Here is an overview.


- latitude: It takes the float that represents the latitude of the center of the map.

- longitude: It takes the float that represents the longitude of the center of the map.

- zoom_int: It takes an integer and represents the zooming on the maps.

- map_type: It is an optional parameter that allows us to show maps in a different mode. The possible input can be a roadmap, satellite, hybrid, and terrain.

- api_key: It is also an optional parameter that takes Google Maps API. If it is not given, then it allows us to use with the watermark saying "for developer purpose only."

### Basic Creation

```{python}
pip install gmplot
```

Put materials on topic 1 here

Python examples can be put into `python` code chunks:

```{python}
# import pandas as pd
import gmplot
api_key = 'AIzaSyDQGVco57cmHijHnzNqsytpOWeWTE5yOlQ'

# UConn Storrs center
center_lat, center_lng = 41.8079, -72.2546

gmap = gmplot.GoogleMapPlotter(center_lat, center_lng, 15, apikey = api_key)

gmap.draw("uconn_base.html")
# do something
```

### Plotting Points

```{python}
gmap2 = gmplot.GoogleMapPlotter(center_lat, center_lng, 15, apikey = api_key)
# Student Union
gmap2.marker(41.8069, -72.2543, color='blue', title="Student Union")

# Gampel Pavilion
gmap2.marker(41.8052, -72.2544, color='red', title="Gampel Pavilion")

# Homer Babbidge Library
gmap2.marker(41.8067, -72.2520, color='green', title="Library")

gmap2.draw("uconn_markers.html")
```

### Sub Topic 2

```{python}
# import gmplot package
import gmplot

latitude_list = [ 41.8069, 41.8052, 41.8067]
longitude_list = [-72.2543, -72.2544, -72.2520]

gmap3 = gmplot.GoogleMapPlotter(center_lat, center_lng, 15, apikey = api_key)

gmap3.scatter( latitude_list, longitude_list, '# FF0000',
                                size = 40, marker = False)

# polygon method Draw a polygon with
# the help of coordinates
gmap3.polygon(latitude_list, longitude_list,
                   color = 'blue')

gmap3.draw( "uconn_poly.html" )

```

### Sub Topic 3

Put matreials on topic 3 here.


### Conclusion

Put sumaries here.

### Further Readings

Put links to further materials.
